"""
Autogenerated input type of CreateEventParticipation
"""
input CreateEventParticipationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: EventParticipationInput!
}

"""
Autogenerated return type of CreateEventParticipation.
"""
type CreateEventParticipationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  eventParticipation: EventParticipation!
}

type Event {
  attendees: [User!]
  bannerImageUrl: String
  description: String
  discordLink: String
  endDatetime: ISO8601DateTime
  id: Int!
  startDatetime: ISO8601DateTime
  title: String!
}

type EventParticipation {
  createdAt: ISO8601DateTime
  description: String
  event: [Event!]
  eventId: Int!
  id: Int!
  user: [User!]
  userId: Int!
}

input EventParticipationInput {
  eventId: Int!
  userId: Int!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

type Mutation {
  createEventParticipation(
    """
    Parameters for CreateEventParticipation
    """
    input: CreateEventParticipationInput!
  ): CreateEventParticipationPayload
}

type Photo {
  actionId: Int
  createdAt: ISO8601DateTime!
  description: String
  eventId: Int
  favoritesCount: Int
  id: ID!
  imageUrl: String
  photoComments: [PhotoComment!]
  published: Boolean
  regionId: Int
  tags: String
  title: String
  trashed: Boolean
  updatedAt: ISO8601DateTime!
  upvotes: Int!
  user: User
  userId: Int
  views: Int
}

type PhotoComment {
  content: String
  upvotes: Int!
  user: User
}

type Query {
  allEventParticipations: [EventParticipation!]!
  allEvents: [Event!]!
  allPhotos: [Photo!]!
  allRegions: [Region!]!
  isUserAttending(eventId: Int!, userId: Int!): Boolean!

  """
  An example field added by the generator
  """
  testField: String!
}

type Region {
  city: String
  description: String
  name: String!
}

type User {
  profileImage: String
  username: String
}
